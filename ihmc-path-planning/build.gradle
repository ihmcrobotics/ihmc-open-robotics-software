plugins {
   id("us.ihmc.ihmc-build")
   id("us.ihmc.ihmc-ci") version "7.6"
   id("us.ihmc.ihmc-cd") version "1.23"
   id("us.ihmc.log-tools-plugin") version "0.6.3"
}

ihmc {
   loadProductProperties("../product.properties")
   maintainer = "Daniel Duran (dduran@ihmc.us)"

   configureDependencyResolution()
   configurePublications()
}

mainDependencies {
   api("org.jgrapht:jgrapht-core:0.9.0")

   api("us.ihmc:euclid:0.17.2")
   api("us.ihmc:euclid-geometry:0.17.2")
   api("us.ihmc:euclid-frame:0.17.2")
   api("us.ihmc:euclid-shape:0.17.2")
   api("us.ihmc:ihmc-javafx-toolkit:0.20.0")
   api("us.ihmc:ihmc-yovariables:0.9.12")
   api("us.ihmc:ihmc-convex-optimization:0.17.11")
   api("us.ihmc:robot-environment-awareness:source")
}

visualizersDependencies {
   api(ihmc.sourceSetProject("main"))
   api(ihmc.sourceSetProject("data-sets"))

   api("us.ihmc:ihmc-javafx-toolkit:0.20.0")
   api("us.ihmc:robot-environment-awareness-application:source")
   api("us.ihmc:ihmc-communication:source")
   api("us.ihmc:ihmc-graphics-javafx:source")
   api("us.ihmc:ihmc-graphics-jmonkeyengine:source")
}

testDependencies {
   api(ihmc.sourceSetProject("visualizers"))
   api(ihmc.sourceSetProject("data-sets"))

   api("us.ihmc:ihmc-commons-testing:0.30.5")
   api("us.ihmc:simulation-construction-set:0.21.16")
   api("us.ihmc:robot-environment-awareness-application:source")
   api("us.ihmc:ihmc-robotics-toolkit-test:source")
}

dataSetsDependencies {
   api(ihmc.sourceSetProject("main"))

   api("us.ihmc:ihmc-commons-testing:0.30.5")
   api("us.ihmc:simulation-construction-set-tools:source")
   api("us.ihmc:robot-environment-awareness:source")
   api("us.ihmc:ihmc-sensor-processing:source")
}

task updateDataSetList {
   doFirst {
      def resourcesDir = "src/data-sets/resources/us/ihmc/pathPlanning/dataSets"
      def srcDir = "src/data-sets/java/us/ihmc/pathPlanning"
      def className = "DataSetName"

      def dataSetDir = new File(resourcesDir)
      def dataSetList = files { dataSetDir.listFiles().sort().reverse() }

      File classFile = new File(srcDir + "/" + className + ".java")
      println classFile.getAbsolutePath()

      if(classFile.exists())
         classFile.delete()
      classFile.createNewFile()

      FileWriter fileWriter = new FileWriter(classFile, true)
      fileWriter.write("package us.ihmc.pathPlanning;\n\n")
      fileWriter.write("public enum " + className + "\n")
      fileWriter.write("{\n")

      dataSetList.each {
         fileWriter.write("\t_" + it.name + ",\n")
      }

      fileWriter.write("}")
      fileWriter.flush()
      fileWriter.close()
   }
}