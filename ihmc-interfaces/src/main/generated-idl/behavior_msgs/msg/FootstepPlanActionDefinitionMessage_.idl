#ifndef __behavior_msgs__msg__FootstepPlanActionDefinitionMessage__idl__
#define __behavior_msgs__msg__FootstepPlanActionDefinitionMessage__idl__

#include "behavior_msgs/msg/./ActionNodeDefinitionMessage_.idl"
#include "behavior_msgs/msg/./FootstepPlanActionFootstepDefinitionMessage_.idl"
#include "geometry_msgs/msg/./Point_.idl"
#include "ihmc_common_msgs/msg/./PrimitiveDataVectorMessage_.idl"
module behavior_msgs
{
  module msg
  {
    module dds
    {

      @TypeCode(type="behavior_msgs::msg::dds_::FootstepPlanActionDefinitionMessage_")
      struct FootstepPlanActionDefinitionMessage
      {
        /**
         * Parent definition fields
         */
        behavior_msgs::msg::dds::ActionNodeDefinitionMessage definition;
        /**
         * Name of the parent frame the footsteps are expressed in
         */
        string parent_frame_name;
        /**
         * Swing duration
         */
        double swing_duration;
        /**
         * Transfer duration
         */
        double transfer_duration;
        /**
         * OVERRIDE (0) or QUEUE (1)
         */
        long execution_mode;
        /**
         * Is using the footstep planner or manually placing
         */
        boolean is_manually_placed;
        /**
         * The footsteps, with a maximum of 50
         */
        sequence<behavior_msgs::msg::dds::FootstepPlanActionFootstepDefinitionMessage, 50> footsteps;
        /**
         * The position to which the goal stance is aligned
         */
        geometry_msgs::msg::dds::Point goal_stance_point;
        /**
         * The point that the robot should be facing in the goal stance
         */
        geometry_msgs::msg::dds::Point goal_focal_point;
        /**
         * Left goal foot X to the goal pose
         */
        double left_goal_foot_x_to_gizmo;
        /**
         * Left goal foot Y to the goal pose
         */
        double left_goal_foot_y_to_gizmo;
        /**
         * Left goal foot Yaw to the goal pose
         */
        double left_goal_foot_yaw_to_gizmo;
        /**
         * Right goal foot X to the goal pose
         */
        double right_goal_foot_x_to_gizmo;
        /**
         * Right goal foot Y to the goal pose
         */
        double right_goal_foot_y_to_gizmo;
        /**
         * Right goal foot Yaw to the goal pose
         */
        double right_goal_foot_yaw_to_gizmo;
        /**
         * Initial stance side when planning
         */
        octet planner_initial_stance_side;
        /**
         * Whether to perform A* search in the planner
         */
        boolean planner_perform_a_star_search;
        /**
         * Whether to walk, turning first, matching the goal orientation
         */
        boolean planner_walk_with_goal_orientation;
        /**
         * The footstep planner parameters
         */
        ihmc_common_msgs::msg::dds::PrimitiveDataVectorMessage planner_parameters;
      };
    };
  };
};

#endif
