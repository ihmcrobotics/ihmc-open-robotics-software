#ifndef __toolbox_msgs__msg__HumanoidKinematicsToolboxConfigurationMessage__idl__
#define __toolbox_msgs__msg__HumanoidKinematicsToolboxConfigurationMessage__idl__

module toolbox_msgs
{
  module msg
  {
    module dds
    {

      /**
       * This message is part of the IHMC whole-body inverse kinematics module.
       * Similar to KinematicsToolboxConfigurationMessage, this contains auxiliary information that allows to further customized the behavior of the solver.
       * The parameters exposed through this message are specific to application to humanoid robots.
       */
      @TypeCode(type="toolbox_msgs::msg::dds_::HumanoidKinematicsToolboxConfigurationMessage_")
      struct HumanoidKinematicsToolboxConfigurationMessage
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * When set to true, the solver will maintain, if possible, the current x and y coordinates of the center
         * of mass. By 'current', it means that the solver will use the robot configuration data
         * broadcasted by the controller to obtain the center of mass position.
         */
        @defaultValue(value=True)
        boolean hold_current_center_of_mass_xy_position;
        /**
         * When set to true, the solver will process the balance status from an active controller session and build a support polygon.
         * Note that the auto support polygon feature is overidden by a user specified support polygon when provided.
         * - when the walking controller is running, the CapturabilityBasedStatus message is used to identify the current support polygon.
         * - when the multi-contact controller is running, the MultiContactBalanceStatus message is used to identify the current support polygon.
         */
        @defaultValue(value=True)
        boolean enable_auto_support_polygon;
        /**
         * When set to true, the solver will hold the pose of the rigid-bodies with active contact points.
         * - when the walking controller is running, the rigid-bodies in question are the feet.
         * - when a multi-contact controller is running, any rigid-body of the robot can be in contact.
         */
        @defaultValue(value=True)
        boolean hold_support_rigid_bodies;
        /**
         * If this is true and the solver receives a MultiContactBalanceStatus, it will solve for the multi-contact support region
         */
        boolean enable_multi_contact_support_region_solver;
      };
    };
  };
};

#endif
