#ifndef __toolbox_msgs__msg__FootstepPlanningToolboxOutputStatus__idl__
#define __toolbox_msgs__msg__FootstepPlanningToolboxOutputStatus__idl__

#include "controller_msgs/msg/./FootstepDataListMessage_.idl"
#include "geometry_msgs/msg/./Point_.idl"
#include "geometry_msgs/msg/./Pose_.idl"
#include "perception_msgs/msg/./PlanarRegionsListMessage_.idl"
#include "toolbox_msgs/msg/./FootstepPlanningTimingsMessage_.idl"
module toolbox_msgs
{
  module msg
  {
    module dds
    {
      const octet BODY_PATH_PLANNING_RESULT_PLANNING =
      0;

      const octet BODY_PATH_PLANNING_RESULT_FOUND_SOLUTION =
      1;

      const octet BODY_PATH_PLANNING_RESULT_TIMED_OUT_BEFORE_SOLUTION =
      2;

      const octet BODY_PATH_PLANNING_RESULT_NO_PATH_EXISTS =
      3;

      const octet BODY_PATH_PLANNING_RESULT_INVALID_GOAL =
      4;

      const octet BODY_PATH_PLANNING_RESULT_MAXIMUM_ITERATIONS_REACHED =
      5;

      const octet BODY_PATH_PLANNING_RESULT_EXCEPTION =
      6;

      const octet BODY_PATH_PLANNING_RESULT_HALTED =
      7;

      const octet FOOTSTEP_PLANNING_RESULT_PLANNING =
      0;

      const octet FOOTSTEP_PLANNING_RESULT_FOUND_SOLUTION =
      1;

      const octet FOOTSTEP_PLANNING_RESULT_TIMED_OUT_BEFORE_SOLUTION =
      2;

      const octet FOOTSTEP_PLANNING_RESULT_NO_PATH_EXISTS =
      3;

      const octet FOOTSTEP_PLANNING_RESULT_INVALID_GOAL =
      4;

      const octet FOOTSTEP_PLANNING_RESULT_MAXIMUM_ITERATIONS_REACHED =
      5;

      const octet FOOTSTEP_PLANNING_RESULT_EXCEPTION =
      6;

      const octet FOOTSTEP_PLANNING_RESULT_HALTED =
      7;

      const long NO_PLAN_ID =
      -1;


      /**
       * This message is part of the IHMC footstep planning module.
       */
      @TypeCode(type="toolbox_msgs::msg::dds_::FootstepPlanningToolboxOutputStatus_")
      struct FootstepPlanningToolboxOutputStatus
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * ID of the request this output corresponds to
         */
        @defaultValue(value=-1)
        long plan_id;
        /**
         * Footstep plan, may be empty depending on the state of the planner, according to footstep_planning_result
         */
        controller_msgs::msg::dds::FootstepDataListMessage footstep_data_list;
        /**
         * Body path plan result. Null if no result is available
         */
        @defaultValue(value=255)
        octet body_path_planning_result;
        /**
         * Footstep planner result. Null if no result is available
         */
        @defaultValue(value=255)
        octet footstep_planning_result;
        /**
         * (deprecated) Regions that correspond to the request message. Originally used for debugging networking
         */
        perception_msgs::msg::dds::PlanarRegionsListMessage planar_regions_list;
        /**
         * Planned body path. Empty if planner failed
         */
        sequence<geometry_msgs::msg::dds::Pose> body_path;
        /**
         * Planned body path before smoothing, used for debugging. Empty if planner failed
         */
        sequence<geometry_msgs::msg::dds::Point> body_path_unsmoothed;
        /**
         * Goal pose used by the planner. This will be different from the requested goal pose if it's beyond the horizon length.
         */
        geometry_msgs::msg::dds::Pose goal_pose;
        /**
         * Object to record various planner timings, helpful for debugging
         */
        toolbox_msgs::msg::dds::FootstepPlanningTimingsMessage planner_timings;
        /**
         * Contains planner stack trace if failure is due to an exception
         */
        string exception_message;
        sequence<string, 20> stacktrace;
      };
    };
  };
};

#endif
