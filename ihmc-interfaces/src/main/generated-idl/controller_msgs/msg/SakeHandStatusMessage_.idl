#ifndef __controller_msgs__msg__SakeHandStatusMessage__idl__
#define __controller_msgs__msg__SakeHandStatusMessage__idl__

module controller_msgs
{
  module msg
  {
    module dds
    {
      const octet ROBOT_SIDE_LEFT =
      0;

      const octet ROBOT_SIDE_RIGHT =
      1;


      /**
       * Message used to report the current joint angles for the fingers of the sake gripper.
       */
      @TypeCode(type="controller_msgs::msg::dds_::SakeHandStatusMessage_")
      struct SakeHandStatusMessage
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        @defaultValue(value=255)
        octet robot_side;
        /**
         * 0.0 open, 1.0 closed
         */
        double normalized_desired_position;
        /**
         * 0.0 min, 1.0 max
         */
        double normalized_desired_torque;
        /**
         * Celsius divided by 100
         */
        double normalized_temperature;
        /**
         * 0.0 open, 1.0 closed
         */
        double normalized_measured_position;
        /**
         * 0.0 min, 1.0 max
         */
        double normalized_measured_torque;
        /**
         * -1.0 = opening, 1.0 = closing. 0.0 = not moving
         */
        double normalized_measured_velocity;
        /**
         * error message as reported by Dynamixel. See: https://emanual.robotis.com/docs/en/dxl/protocol1/#error
         */
        string error_message;
        /**
         * tick value from Dynamixel. Increments from 0 to 32767, then repeats
         */
        unsigned short realtime_tick;
      };
    };
  };
};

#endif
