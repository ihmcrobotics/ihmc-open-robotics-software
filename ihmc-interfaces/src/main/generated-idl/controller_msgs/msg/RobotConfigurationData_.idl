#ifndef __controller_msgs__msg__RobotConfigurationData__idl__
#define __controller_msgs__msg__RobotConfigurationData__idl__

#include "controller_msgs/msg/./IMUPacket_.idl"
#include "controller_msgs/msg/./SpatialVectorMessage_.idl"
#include "geometry_msgs/msg/./Point_.idl"
#include "geometry_msgs/msg/./Quaternion_.idl"
#include "geometry_msgs/msg/./Vector3_.idl"
module controller_msgs
{
  module msg
  {
    module dds
    {
      const octet ROBOT_MOTION_STATUS_UNKNOWN =
      0;

      const octet ROBOT_MOTION_STATUS_STANDING =
      1;

      const octet ROBOT_MOTION_STATUS_IN_MOTION =
      2;


      /**
       * This message carries the general robot information such as the joints' state and IMU and force sensors' measurement.
       * It is published frequently from the IHMC state estimator.
       */
      @TypeCode(type="controller_msgs::msg::dds_::RobotConfigurationData_")
      struct RobotConfigurationData
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * Time in nanoseconds of the clock hanging on the wall.
         * Takes into account leap seconds/years and is updated by the NTP server (thus can jump backwards).
         * The wall time is usually used in ROS1 for synchronizing timestamps of different time sources (computers, sensors, etc.)
         */
        long long wall_time;
        /**
         * Time in nanoseconds that represents the absolute elapsed wall-clock time since some arbitrary, fixed point in the past.
         * It is not affected by changes in the system time-of-day clock.
         * This time is usually computed from a real-time process and can be used for reliably computing the time elapsed between two events.
         */
        long long monotonic_time;
        /**
         * Platform dependent.
         * Time signal in nanoseconds that can be used to synchronize two time sources.
         */
        long long sync_timestamp;
        long joint_name_hash;
        sequence<float, 50> joint_angles;
        sequence<float, 50> joint_velocities;
        sequence<float, 50> joint_torques;
        geometry_msgs::msg::dds::Point root_position;
        geometry_msgs::msg::dds::Quaternion root_orientation;
        geometry_msgs::msg::dds::Vector3 pelvis_linear_velocity;
        geometry_msgs::msg::dds::Vector3 pelvis_angular_velocity;
        geometry_msgs::msg::dds::Vector3 pelvis_linear_acceleration;
        sequence<controller_msgs::msg::dds::SpatialVectorMessage, 50> force_sensor_data;
        sequence<controller_msgs::msg::dds::IMUPacket, 50> imu_sensor_data;
        @defaultValue(value=255)
        octet robot_motion_status;
        long last_received_packet_type_id;
        long long last_received_packet_unique_id;
        long long last_received_packet_robot_timestamp;
      };
    };
  };
};

#endif
