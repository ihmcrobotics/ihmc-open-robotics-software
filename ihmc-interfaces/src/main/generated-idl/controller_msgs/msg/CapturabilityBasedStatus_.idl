#ifndef __controller_msgs__msg__CapturabilityBasedStatus__idl__
#define __controller_msgs__msg__CapturabilityBasedStatus__idl__

#include "controller_msgs/msg/./SpatialVectorMessage_.idl"
#include "geometry_msgs/msg/./Point_.idl"
#include "geometry_msgs/msg/./Vector3_.idl"
module controller_msgs
{
  module msg
  {
    module dds
    {

      /**
       * This message is part of the IHMC whole-body controller API.
       * Published by the IHMC controller, this message carries minimal information relative
       * to the current balance status of the robot.
       * All the information here is expressed in the world frame.
       */
      @TypeCode(type="controller_msgs::msg::dds_::CapturabilityBasedStatus_")
      struct CapturabilityBasedStatus
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * This is the current value of omega, which is the time constant of the inverted pendulum.
         */
        double omega;
        /**
         * This is the measured position in world of the robot's capture point. Only x and y coordinates are relevant.
         */
        geometry_msgs::msg::dds::Point capture_point_2d;
        /**
         * This is the desired position in world for the robot's capture point. Only x and y coordinates are relevant.
         */
        geometry_msgs::msg::dds::Point desired_capture_point_2d;
        /**
         * This is the measured position in world of the robot's center of mass.
         */
        geometry_msgs::msg::dds::Point center_of_mass_3d;
        /**
         * List of the active contact points used for the left foot. The coordinates are in world frame.
         */
        sequence<geometry_msgs::msg::dds::Point, 8> left_foot_support_polygon_3d;
        /**
         * List of the active contact points used for the right foot. The coordinates are in world frame.
         */
        sequence<geometry_msgs::msg::dds::Point, 8> right_foot_support_polygon_3d;
        /**
         * List of the active contact points for the left hand, empty if there is no hand contact point. The coordinates are in the hand body-fixed frame.
         */
        sequence<geometry_msgs::msg::dds::Point, 1> left_hand_contact_points;
        /**
         * List of the active contact points for the right hand, empty is there is no hand contact point. The coordinates are in the hand body-fixed frame.
         */
        sequence<geometry_msgs::msg::dds::Point, 1> right_hand_contact_points;
        /**
         * Surface normal of the left hand, if in contact. Contact is assumed to be at the hand control frame. Set to zero (the default value) if not in contact.
         */
        geometry_msgs::msg::dds::Vector3 left_hand_contact_normal;
        /**
         * Surface normal of the right hand, if in contact. Contact is assumed to be at the hand control frame. Set to zero (the default value) if not in contact.
         */
        geometry_msgs::msg::dds::Vector3 right_hand_contact_normal;
        /**
         * The estimated hand wrench of the right hand
         */
        controller_msgs::msg::dds::SpatialVectorMessage right_hand_wrench;
        /**
         * The estimated hand wrench of the left hand
         */
        controller_msgs::msg::dds::SpatialVectorMessage left_hand_wrench;
      };
    };
  };
};

#endif
