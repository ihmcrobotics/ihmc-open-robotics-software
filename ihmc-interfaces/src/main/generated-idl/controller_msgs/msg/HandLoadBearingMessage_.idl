#ifndef __controller_msgs__msg__HandLoadBearingMessage__idl__
#define __controller_msgs__msg__HandLoadBearingMessage__idl__

#include "geometry_msgs/msg/./Point_.idl"
#include "geometry_msgs/msg/./Vector3_.idl"
module controller_msgs
{
  module msg
  {
    module dds
    {
      const octet ROBOT_SIDE_LEFT =
      0;

      const octet ROBOT_SIDE_RIGHT =
      1;


      /**
       * This message is part of the IHMC whole-body controller API.
       * Request the controller to use a hand to help supporting the robot weight.
       */
      @TypeCode(type="controller_msgs::msg::dds_::HandLoadBearingMessage_")
      struct HandLoadBearingMessage
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * The robot side of the hand that will be load bearing.
         */
        @defaultValue(value=255)
        octet robot_side;
        /**
         * If true it will load the contact point, otherwise the hand will stop bearing load.
         */
        boolean load;
        /**
         * Sets the coefficient of friction that the controller will use for the contact point (only used if load=true).
         */
        double coefficient_of_friction;
        /**
         * Hand contact point expressed in the hand's body-fixed frame (only used if load=true).
         */
        geometry_msgs::msg::dds::Point contact_point_in_body_frame;
        /**
         * Contact normal in world frame, pointing away from the environment (only used if load=true).
         */
        geometry_msgs::msg::dds::Vector3 contact_normal_in_world;
      };
    };
  };
};

#endif
