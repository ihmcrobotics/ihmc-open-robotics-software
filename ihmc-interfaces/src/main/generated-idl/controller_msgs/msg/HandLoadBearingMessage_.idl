#ifndef __controller_msgs__msg__HandLoadBearingMessage__idl__
#define __controller_msgs__msg__HandLoadBearingMessage__idl__

#include "controller_msgs/msg/./JointspaceTrajectoryMessage_.idl"
#include "controller_msgs/msg/./LoadBearingMessage_.idl"
module controller_msgs
{
  module msg
  {
    module dds
    {
      const octet ROBOT_SIDE_LEFT =
      0;

      const octet ROBOT_SIDE_RIGHT =
      1;


      /**
       * This message is part of the IHMC whole-body controller API.
       * Request the controller to use a hand to help supporting the robot weight.
       */
      @TypeCode(type="controller_msgs::msg::dds_::HandLoadBearingMessage_")
      struct HandLoadBearingMessage
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * The robot side of the hand that will be load bearing.
         */
        @defaultValue(value=255)
        octet robot_side;
        /**
         * Determines whether hybrid load bearing and jointspace control will be used.
         */
        boolean use_jointspace_command;
        /**
         * The arm desired jointspace trajectory that will be used for hybrid control if use_jointspace_command is true.
         * The indexing for the joints goes increasingly from the first shoulder joint to the last arm joint.
         */
        controller_msgs::msg::dds::JointspaceTrajectoryMessage jointspace_trajectory;
        /**
         * The time to delay this message on the controller side before being executed.
         */
        double execution_delay_time;
        /**
         * Information specific to the load bearing properties.
         */
        controller_msgs::msg::dds::LoadBearingMessage load_bearing_message;
      };
    };
  };
};

#endif
