#ifndef __perception_msgs__msg__PolygonizerParametersMessage__idl__
#define __perception_msgs__msg__PolygonizerParametersMessage__idl__

module perception_msgs
{
  module msg
  {
    module dds
    {

      /**
       * This message is part of the IHMC Robot Environment Awareness (REA) module.
       */
      @TypeCode(type="perception_msgs::msg::dds_::PolygonizerParametersMessage_")
      struct PolygonizerParametersMessage
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * Threshold used when creating a new concave hull.
         * Uses the Duckham and al. (2008) algorithm defined in the paper "Efficient generation of
         * simple polygons for characterizing the shape of a set of points in the plane".
         */
        @defaultValue(value=0.15)
        double concave_hull_threshold;
        /**
         * The minimum number of nodes required for a region to be polygonized.
         */
        @defaultValue(value=10)
        long min_number_of_nodes;
        /**
         * Filter parameter on the concave hull of a region. Used to removed vertices describing shallow angle.
         */
        @defaultValue(value=0.01745)
        double shallow_angle_threshold;
        /**
         * Filter parameter on the concave hull of a region. Used to removed vertices that create peaks.
         */
        @defaultValue(value=2.967)
        double peak_angle_threshold;
        /**
         * Filter parameter on the concave hull of a region. Used to removed short edges.
         */
        @defaultValue(value=0.05)
        double length_threshold;
        /**
         * Threshold used for decomposing the concave hull into convex polygons. Describes the maximum depth
         * of a concavity before the concave hull gets split in 2.
         */
        @defaultValue(value=0.1)
        double depth_threshold;
        /**
         * Filter for splitting concave hulls at any narrow passage which width is less than (2 * length_threshold).
         */
        @defaultValue(value=True)
        boolean cut_narrow_passage;
      };
    };
  };
};

#endif
