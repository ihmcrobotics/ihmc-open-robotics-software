#ifndef __perception_msgs__msg__DetectableSceneNodeMessage__idl__
#define __perception_msgs__msg__DetectableSceneNodeMessage__idl__

#include "controller_msgs/msg/./RigidBodyTransformMessage_.idl"
module perception_msgs
{
  module msg
  {
    module dds
    {

      /**
       * A detectable perception scene node
       * The topic name identifies the node.
       */
      @TypeCode(type="perception_msgs::msg::dds_::DetectableSceneNodeMessage_")
      struct DetectableSceneNodeMessage
      {
        /**
         * The name of the scene node
         */
        string name;
        /**
         * Whether or not the node is currently detected
         */
        boolean currently_detected;
        /**
         * Transform of the node's frame to world frame
         */
        controller_msgs::msg::dds::RigidBodyTransformMessage transform_to_world;
        /**
         * If this node is trackable via an ArUco maker, this is the ArUco marker's
         * transform to world frame. This is so we can reset overriden node
         * poses back to ArUco relative ones.
         */
        controller_msgs::msg::dds::RigidBodyTransformMessage aruco_marker_transform_to_world;
        /**
         * Nodes can be set to not track the detected pose
         */
        boolean track_detected_pose;
        /**
         * Break frequency filter value for nodes that are alpha filtered
         */
        float break_frequency;
      };
    };
  };
};

#endif
