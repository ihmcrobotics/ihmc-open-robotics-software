#ifndef __perception_msgs__msg__IterativeClosestPointRequest__idl__
#define __perception_msgs__msg__IterativeClosestPointRequest__idl__

#include "geometry_msgs/msg/./Pose_.idl"
#include "geometry_msgs/msg/./Vector3_.idl"
module perception_msgs
{
  module msg
  {
    module dds
    {
      /**
       * Shape of the object
       */
      const octet SHAPE_BOX =
      0;

      const octet SHAPE_PRISM =
      1;

      const octet SHAPE_ELLIPSOID =
      2;

      const octet SHAPE_CYLINDER =
      3;

      const octet SHAPE_CONE =
      4;


      @TypeCode(type="perception_msgs::msg::dds_::IterativeClosestPointRequest_")
      struct IterativeClosestPointRequest
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * Scene node ID
         */
        unsigned long node_id;
        /**
         * Shape of the object
         */
        octet shape;
        /**
         * Dimensions of the object
         */
        geometry_msgs::msg::dds::Vector3 lengths;
        geometry_msgs::msg::dds::Vector3 radii;
        /**
         * User defined pose of virtual object
         */
        geometry_msgs::msg::dds::Pose provided_pose;
        /**
         * ICP parameters
         */
        long number_of_shape_samples;
        long number_of_correspondences;
        long number_of_iterations;
        float segmentation_radius;
        /**
         * Start/stop flag (true = run, false = stop)
         */
        boolean run_icp;
        /**
         * Whether to use the user defined pose, or ICP objects centroid
         */
        boolean use_provided_pose;
      };
    };
  };
};

#endif
